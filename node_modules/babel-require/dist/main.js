'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = es6require;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var babel = require('babel');

// https://github.com/joyent/node/blob/master/lib/module.js
// http://stackoverflow.com/questions/17581830/load-node-js-module-from-string-in-memory

function es6require(modulePath, babelOptions) {
  modulePath = _path2['default'].resolve(modulePath);
  if (_fs2['default'].existsSync(modulePath)) {
    var code = babel.transformFileSync(modulePath, babelOptions).code;
    var pathModule = new module.constructor();

    var localModulesPath = _path2['default'].join(process.cwd(), 'node_modules');

    if ((pathModule.paths || []).indexOf(localModulesPath) == -1) {
      pathModule.paths = [localModulesPath].concat(pathModule.paths);
    }

    pathModule._compile(code, modulePath);
    return pathModule.exports;
  }
}

module.exports = exports['default'];